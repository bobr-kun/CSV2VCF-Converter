FUNCTION base64
LPARAMETERS encode_str
LOCAL binary_char, binary_str, base64_str, base64_char, alpahbet, tmp_str, remainder_val

alpahbet 	='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
binary_str 	= ''
base64_str  = ''
SET PROCEDURE TO 'progs\base2base' ADDITIVE 
FOR i = 1 TO LEN(encode_str)
	binary_char = base2base(ASC(SUBSTR(encode_str, i, 1)), 10, 2)
	
	IF LEN(binary_char) < 8
		binary_char = '0' + binary_char
	ENDIF 
	
	binary_str = binary_str + binary_char
ENDFOR 

DO CASE 
	CASE LEN(binary_str) = 8
		base64_str = base64_str + SUBSTR(alpahbet, VAL(base2base(SUBSTR(binary_str, 1, 6), 2, 10)) + 1, 1)
		base64_str = base64_str + SUBSTR(alpahbet, VAL(base2base(SUBSTR(binary_str, 7, 2) + '0000', 2, 10)) + 1, 1)
		base64_str = base64_str + '=='
		
	CASE LEN(binary_str) = 16
		base64_str = base64_str + SUBSTR(alpahbet, VAL(base2base(SUBSTR(binary_str, 1, 6), 2, 10)) + 1, 1)
		base64_str = base64_str + SUBSTR(alpahbet, VAL(base2base(SUBSTR(binary_str, 7, 6), 2, 10)) + 1, 1)
		base64_str = base64_str + SUBSTR(alpahbet, VAL(base2base(SUBSTR(binary_str, 13, 4) + '00', 2, 10)) + 1, 1)
		base64_str = base64_str + '='
		
	OTHERWISE 
		FOR i = 0 TO LEN(binary_str) STEP 6
			IF (LEN(binary_str) - i) >= 6
				base64_char = SUBSTR(alpahbet, VAL(base2base(SUBSTR(binary_str, i + 1, 6), 2, 10)) + 1, 1)
				base64_str	= base64_str + base64_char
			ELSE 
				tmp_str = SUBSTR(binary_str, i + 1, LEN(binary_str) - i)
				
				FOR j = 1 TO 6 - (LEN(binary_str) - i)
					tmp_str = tmp_str + '0'
				ENDFOR 
				
				remainder_val 	= VAL(base2base(tmp_str, 2, 10)) + 1
				base64_str		= base64_str + SUBSTR(alpahbet, remainder_val, 1)
				
				DO CASE 
					CASE MOD(LEN(binary_str), 24) = 8
						base64_str	= base64_str + '=='
						
					CASE MOD(LEN(binary_str), 24) = 16
						base64_str	= base64_str + '='	
				ENDCASE 
			ENDIF 				
		ENDFOR 
ENDCASE 

RETURN base64_str